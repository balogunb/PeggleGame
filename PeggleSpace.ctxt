#BlueJ class context
comment0.target=PeggleSpace
comment0.text=\r\n\ PeggleSpace\r\n\ This\ class\ draws\ the\ graphics,checks\ collision\ and\ controls\ the\ direction\ the\ cannon\ shoots\ at\ \ \r\n\ @Basit\ Balogun\r\n\ \r\n\ Testing\ Hypothesis\ -\ \r\n\ I\ ended\ up\ needing\ a\ lot\ more\ variables\ like\ cannonAngle,\ peg,\ hitCount\ and\ making\ my\ labels\r\n\ instant\ variables\ for\ my\ game\ to\ work\ the\ way\ I\ wanted\ it\ to.\ I\ also\ removed\ some\ of\ the\ variables\ \r\n\ and\ static\ constants\ like\ SPEED,WALL_W,\ because\ they\ did\ not\ seem\ necessary\ for\ the\ implementation\ \r\n\ of\ this\ program.\ Most\ importantly\ \ I\ drew\ my\ peg\ in\ drawPegs\ method\ rather\ than\ in\ draw\ graphics\ \r\n\ because\ it\ allowed\ me\ to\ let\ my\ game\ restart\ with\ minimal\ complications.\ other\ changes\ are\ explained\r\n\ in\ CannonBall\ class\ comment\ section\ and\ HitBall\ class\ comment\ section.\r\n
comment1.params=
comment1.target=void\ run()
comment1.text=the\ run\ method,\ draw\ the\ inital\ graphics
comment10.params=line
comment10.target=double\ getAngle(acm.graphics.GLine)
comment11.params=line
comment11.target=double\ getLength(acm.graphics.GLine)
comment12.params=
comment12.target=boolean\ checkStatus()
comment2.params=
comment2.target=void\ drawGraphics()
comment2.text=initially\ draw\ the\ background,\ a\ ball\ using\ HitBall\ class\ and\ a\ label
comment3.params=size
comment3.target=void\ createCannon(double)
comment3.text=draw\ a\ polygon\ as\ the\ barrel
comment4.params=
comment4.target=void\ drawPegs()
comment5.params=point
comment5.target=void\ mousePressed(acm.graphics.GPoint)
comment5.text=create\ a\ Cannon\ when\ mouse\ is\ pressed
comment6.params=
comment6.target=acm.graphics.GPoint\ getCannonTip()
comment7.params=point
comment7.target=void\ mouseMoved(acm.graphics.GPoint)
comment7.text=rotate\ the\ cannon\ as\ mouse\ moves
comment8.params=ball
comment8.target=void\ checkCollision(CannonBall)
comment8.text=check\ if\ the\ Cannonball\ hits\ anything
comment9.params=point
comment9.target=void\ rotateCannonToPoint(acm.graphics.GPoint)
numComments=13
